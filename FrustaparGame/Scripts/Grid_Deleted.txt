#It takes position in grid and increments of 1 for directions
#func change_pos(pos: Vector2, x: int, y: int):
#	if(pos.x + x < width && pos.x + x >= 0 && pos.y + y >= 0 && pos.y < height):
#		var stored_piece
#		var stored_pos 
#		stored_piece = pieces_table[pos.x][pos.y] 
#		stored_pos = pieces_table[pos.x][pos.y].position 
#		pieces_table[pos.x][pos.y].position = pieces_table[pos.x + x][pos.y + y].position
#		pieces_table[pos.x][pos.y] = pieces_table[pos.x + x][pos.y + y]
#		pieces_table[pos.x + x][pos.y + y].position = stored_pos
#		pieces_table[pos.x + x][pos.y + y] = stored_piece
		
#func change_pos(pos: Vector2, x: int, y: int):
#	if(pos.x + x < width && pos.x + x >= 0 && pos.y + y >= 0 && pos.y < height):
#		var changable = true
#		if( y != 0):
#			changable = pieces_table[pos.x][pos.y].movable_down
#		if(changable):
#			var stored_piece
#			var stored_pos 
#			stored_piece = pieces_table[pos.x][pos.y] 
#			pieces_table[pos.x][pos.y].matchable = false
#			pieces_table[pos.x + x][pos.y + y].matchable = false
#			stored_pos = pieces_table[pos.x][pos.y].node_pos
#			pieces_table[pos.x][pos.y].node_pos = pieces_table[pos.x + x][pos.y + y].node_pos
#			pieces_table[pos.x][pos.y] = pieces_table[pos.x + x][pos.y + y]
#			pieces_table[pos.x + x][pos.y + y].node_pos = stored_pos
#			pieces_table[pos.x + x][pos.y + y] = stored_piece
#			if(y != 0):
#				move_pieces_Y()
#			elif(x != 0):
#				pieces_table[pos.x][pos.y].movable_down = false
#				pieces_table[pos.x + x][pos.y + y].movable_down = false
#				move_pieces_X()
