[gd_scene load_steps=5 format=2]

[ext_resource path="res://Assets/Air32.png" type="Texture" id=1]
[ext_resource path="res://Pieces/TemplatePiece.tscn" type="PackedScene" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

vec4 texturePointSmooth(sampler2D tex, vec2 uv) {
	vec2 size = vec2(textureSize(tex, 0));
	vec2 pixel = vec2(1.0) / size;
	uv -= pixel * vec2(0.5);
	vec2 uv_pixels = uv * size;
	vec2 delta_pixel = fract(uv_pixels) - vec2(0.5);
	vec2 ddxy = fwidth(uv_pixels);
	vec2 mip = log2(ddxy) - 0.5;
	return textureLod(tex, uv + (clamp(delta_pixel / ddxy, 0.0, 1.0) - delta_pixel) * pixel, min(mip.x, mip.y));
}

void fragment() {
	vec4 Texture = texturePointSmooth(TEXTURE, UV);
	COLOR = Texture.rgba;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[node name="Air" instance=ExtResource( 2 )]
piece_type = "air"

[node name="Sprite" parent="." index="0"]
material = SubResource( 2 )
texture = ExtResource( 1 )
